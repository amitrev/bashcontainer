version: '3.3'

networks:
  internal-network:
    external: false
    driver: bridge

services:
  code:
    build: ./docker/code
    container_name: "${PROJECT_NAME}-code"
    volumes:
      - ./backend:/project/backend
      - ./frontend:/project/frontend
      - ./docker/code/common.ini:/usr/local/etc/php/conf.d/98-common.ini
      - ./docker/code/xdebug.ini:/usr/local/etc/php/conf.d/99-xdebug.ini
    environment:
      DATABASE_URL: mysql://${DB_USER}:${DB_PASSWORD}@mariadb:3306/${DB_DATABASE}
    networks:
      - internal-network

  webserver:
    image: nginx:alpine
    container_name: "${PROJECT_NAME}-www"
    working_dir: /project
    volumes:
      - ./backend:/project/backend
      - ./frontend:/project/frontend
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/certs:/etc/nginx/certs
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.webserver.rule: Host(`${PROJECT_NAME}.localhost`)
      traefik.http.routers.webserver.tls: true
      traefik.http.routers.webserver.entrypoints: websecure
      traefik.http.services.webserver.loadbalancer.server.scheme: https
      traefik.http.services.webserver.loadbalancer.server.port: 443
    depends_on:
      - code
      - proxy
    networks:
      - internal-network

  proxy:
    image: traefik:v2.5
    container_name: "${PROJECT_NAME}-proxy"
    command:
      #- --log.level=DEBUG
      - --api=true
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.file.directory=/etc/traefik
      - --providers.file.watch=true
      - --serverstransport.insecureskipverify=true
    labels:
      traefik.enable: true
      traefik.http.routers.proxy.rule: Host(`${PROJECT_NAME}-proxy.localhost`)
      traefik.http.routers.proxy.service: api@internal
      traefik.http.routers.reverse.entrypoints: web
    restart: always
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/nginx/certs:/etc/traefik/certs
      - ./docker/traefik:/etc/traefik
    networks:
      - internal-network

  redis:
    image: redis:alpine
    container_name: "${PROJECT_NAME}-redis"
    networks:
      - internal-network
    labels:
      traefik.enable: true
      traefik.tcp.routers.redis.rule: HostSNI(`${PROJECT_NAME}-redis.localhost`)
      traefik.tcp.services.redis.loadbalancer.server.port: 6379

  mariadb:
    image: mariadb
    container_name: "${PROJECT_NAME}-mariadb"
    volumes:
      - ./docker/mariadb://docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    restart: unless-stopped
    networks:
      - internal-network
    labels:
      traefik.enable: true
      traefik.tcp.routers.mariadb.rule: HostSNI(`${PROJECT_NAME}-mariadb.localhost`)
      traefik.tcp.services.mariadb.loadbalancer.server.port: 3306

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: "${PROJECT_NAME}-phpmyadmin"
    restart: unless-stopped
    environment:
      PMA_HOST: mariadb
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    labels:
      traefik.enable: true
      traefik.http.routers.phpmyadmin.rule: Host(`${PROJECT_NAME}-phpmyadmin.localhost`)
      traefik.http.routers.phpmyadmin.entrypoints: web
      traefik.http.services.phpmyadmin.loadbalancer.server.port: 80
    networks:
      - internal-network
    depends_on:
      - mariadb
